(function(){
	'use strict'

	angular.element(function() {
    angular.bootstrap(document, ['ro-app']);
  });

	angular.module('ro-app', [
		//Third party dependencies
		'ui.router',

		//common directives
		'core.module',

		//Application specific
		'mdnid.module',
		'otp.module',
		'roorrmu.module',
		'userbasicdetails.module',
		'useraddressdetails.module',
		'userloandetails.module',
		'userdownloadform.module',
		'signedForm.module',
		'thankyou.module'
	]);
})();

(function(){
	'use strict';
	angular.module('mdnid.module', []);
})();

(function(){
	'use strict';
	angular.module('otp.module', []);
})();

(function(){
	'use strict';
	angular.module('roorrmu.module', []);
})();

(function(){
	'use strict';
	angular.module('thankyou.module', []);
})();

(function(){
	'use strict';
	angular.module('signedForm.module', []);
})();

(function(){
	'use strict';
	angular.module('useraddressdetails.module', []);
})();

(function(){
	'use strict';
	angular.module('userbasicdetails.module', []);
})();

(function(){
	'use strict';
	angular.module('user.module', []);
})();

(function(){
	'use strict';
	angular.module('userdownloadform.module', []);
})();

(function(){
	'use strict';
	angular.module('userloandetails.module', []);
})();

(function(){
	'use strict';
	angular.module('core.module', []);
})();

(function(){
	'use strict'
	angular.module('ro-app')
		.config(appConfig);

	appConfig.$inject = ['$stateProvider', '$urlRouterProvider', '$httpProvider', '$locationProvider'];

	function appConfig($stateProvider, $urlRouterProvider, $httpProvider, $locationProvider){
		$stateProvider.
			state('mdnid', {
				url: '/',
				templateUrl: 'mdnid/mdnid.html',
    		controller: 'mdnidCntl',
    		controllerAs: 'ro'
			}).
			state('otp', {
				url: '/otp',
				templateUrl: 'otp/otp.html',
    		controller: 'otpCntl',
    		controllerAs: 'ro'
			}).
			state('roorrmu', {
				url: '/roorrmu',
				templateUrl: 'roorrmu/roorrmu.html',
    		controller: 'roorrmuCntl',
    		controllerAs: 'ro'
			}).
			state('userbasicdetails', {
				url: '/userbasicdetails',
				templateUrl: 'userbasicdetails/userbasicdetails.html',
    		controller: 'userbasicdetailsCntl',
    		controllerAs: 'ro'
			}).
			state('useraddressdetails', {
				url: '/useraddressdetails',
				templateUrl: 'useraddressdetails/useraddressdetails.html',
    		controller: 'useraddressdetailsCntl',
    		controllerAs: 'ro'
			}).
			state('userloandetails', {
				url: '/userloandetails',
				templateUrl: 'userloandetails/userloandetails.html',
    		controller: 'userloandetailsCntl',
    		controllerAs: 'ro'
			}).
			state('userdownloadform', {
				url: '/userdownloadform',
				templateUrl: 'userdownloadform/userdownloadform.html',
    		controller: 'userdownloadformCntl',
    		controllerAs: 'ro'
			}).
			state('signedform', {
				url: '/signedform',
				templateUrl: 'uploadsignedform/uploadsignedform.html',
    		controller: 'signedFormCntl',
    		controllerAs: 'ro'
			}).
			state('thankyou', {
				url: '/thankyou',
				templateUrl: 'thankyou/thankyou.html',
    		controller: 'thankyouCntl',
    		controllerAs: 'ro'
			})

			$urlRouterProvider.otherwise('/');
	}
})();

(function(){
	'use strict'

	angular.module('ro-app')
		.service('roService', roService);

	roService.$inject = [];

	function roService(){

	}
})();

(function(ro){
	'use strict';
	angular.module('mdnid.module')
	.service('mdnidService', mdnidService);

	mdnidService.$inject = ['$http', '$q'];

	function mdnidService($http, $q){
		var service;

		service = {
      getAuthenticatedUser: getAuthenticatedUser
    };

		return service;

		function getAuthenticatedUser(mdnid, phone) {
        var deferred = $q.defer();

				//in url please enter url of the api
				//mehtod could be get,post, delete and others standard http requet method
				//params will consist of the list of parameter(comma separated) that need to be passed in API call
        $http({
            url : 'url',
            method: "GET",
            params: {
							mdnid: mdnid,
							phone: phone
						}
        })
        .success(function (data) {
            deferred.resolve(data);
        })
        .error(function () {
            deferred.reject("Failed to get data");
        });
				
        return deferred.promise;
    }
	}

})(window);

(function(ro){
	'use strict';
	angular.module('otp.module')
	.service('otpService', otpService);

	otpService.$inject = ['$http', '$q'];

	function otpService($http, $q){
		var service;

		service = {
      getAuthenticatedUser: getAuthenticatedUser
    };

		return service;

		function getAuthenticatedUser(otp) {
        var deferred = $q.defer();

				//in url please enter url of the api
				//mehtod could be get,post, delete and others standard http requet method
				//params will consist of the list of parameter(comma separated) that need to be passed in API call
        $http({
            url : 'url',
            method: "GET",
            params: {
							otp: otp
						}
        })
        .success(function (data) {
            deferred.resolve(data);
        })
        .error(function () {
            deferred.reject("Failed to get data");
        });

        return deferred.promise;
    }
	}

})(window);

(function(ro){
	'use strict';
	angular.module('roorrmu.module')
	.service('roorrmuService', roorrmuService);

	roorrmuService.$inject = ['$http', '$q'];

	function roorrmuService($http, $q){
		var service;

		service = {
      postUserType: postUserType
    };

		return service;

		function postUserType(userType) {
        var deferred = $q.defer();

				//in url please enter url of the api
				//mehtod could be get,post, delete and others standard http requet method
				//params will consist of the list of parameter(comma separated) that need to be passed in API call
        $http({
            url : 'url',
            method: "POST",
            params: {
							userType: userType
						}
        })
        .success(function (data) {
            deferred.resolve(data);
        })
        .error(function () {
            deferred.reject("Failed to post data");
        });

        return deferred.promise;
    }
	}

})(window);

(function(ro){
	'use strict';
	angular.module('thankyou.module')
	.service('thankyouService', thankyouService);

	thankyouService.$inject = [];

	function thankyouService(){

	}

})(window);

(function(ro){
	'use strict';
	angular.module('signedForm.module')
	.service('signedFormService', signedFormService);

	signedFormService.$inject = [];

	function signedFormService(){

	}

})(window);

(function(ro){
	'use strict';
	angular.module('useraddressdetails.module')
	.service('useraddressdetailsService', useraddressdetailsService);

	useraddressdetailsService.$inject = ['$http', '$q'];

	function useraddressdetailsService($http, $q){
		var service;

		service = {
      saveUserAddressDetails: saveUserAddressDetails
    };

		return service;

		function saveUserAddressDetails(user) {
        var deferred = $q.defer();

				//in url please enter url of the api
				//mehtod could be get,post, delete and others standard http requet method
				//params will consist of the list of parameter(comma separated) that need to be passed in API call
        $http({
            url : 'url',
            method: "POST",
            params: {
							user: user
						}
        })
        .success(function (data) {
            deferred.resolve(data);
        })
        .error(function () {
            deferred.reject("Failed to post data");
        });

        return deferred.promise;
    }
	}

})(window);

(function(ro){
	'use strict';
	angular.module('userbasicdetails.module')
	.service('userbasicdetailsService', userbasicdetailsService);

	userbasicdetailsService.$inject = ['$http', '$q'];

	function userbasicdetailsService($http, $q){
		var service;

		service = {
      saveUserBasicDetails: saveUserBasicDetails
    };

		return service;

		function saveUserBasicDetails(user) {
        var deferred = $q.defer();

				//in url please enter url of the api
				//mehtod could be get,post, delete and others standard http requet method
				//params will consist of the list of parameter(comma separated) that need to be passed in API call
        $http({
            url : 'url',
            method: "POST",
            params: {
							user: user
						}
        })
        .success(function (data) {
            deferred.resolve(data);
        })
        .error(function () {
            deferred.reject("Failed to post data");
        });

        return deferred.promise;
    }
	}

})(window);

(function(ro){
	'use strict';
	angular.module('user.module')
	.service('userService', userService);

	userService.$inject = [];

	function userService(){

	}

})(window);

(function(ro){
	'use strict';
	angular.module('userdownloadform.module')
	.service('userdownloadformService', userdownloadformService);

	userdownloadformService.$inject = [];

	function userdownloadformService(){

	}

})(window);

(function(ro){
	'use strict';
	angular.module('userloandetails.module')
	.service('userloandetailsService', userloandetailsService);

	userloandetailsService.$inject = ['$http', '$q'];

	function userloandetailsService($http, $q){
		var service;

		service = {
			saveUserLoanDetails: saveUserLoanDetails
		};

		return service;

		function saveUserLoanDetails(user) {
				var deferred = $q.defer();

				//in url please enter url of the api
				//mehtod could be get,post, delete and others standard http requet method
				//params will consist of the list of parameter(comma separated) that need to be passed in API call
				$http({
						url : 'url',
						method: "POST",
						params: {
							user: user
						}
				})
				.success(function (data) {
						deferred.resolve(data);
				})
				.error(function () {
						deferred.reject("Failed to post data");
				});

				return deferred.promise;
		}
	}

})(window);

(function(){
	'use strict'

	angular.module('ro-app')
		.controller('roCntl', roCntl);

	roCntl.$inject = ['roService'];

	function roCntl(roService){
		var vm = this;

		activate();

		/////////////////////////////

		function activate(){

		}
	}
})();

(function(){
	'use strict';
	angular.module('mdnid.module')
		.controller('mdnidCntl', mdnidCntl);

	mdnidCntl.$inject = ['mdnidService', '$state'];

	function mdnidCntl(mdnidService, $state){
		var vm = this;
		vm.phoneNumberRegex = '\\d{10}';
		vm.submitMdnidForm = submitMdnidForm;
		activate();

		///////////////////////////

		function activate(){

		}

		function submitMdnidForm(isValid){
			if(isValid){
				//this API will call when user passed out of form validations
				//this API function(getAuthenticatedUser) is written inside the services
				//this will either return success(resolveAuthenticatedUser) or error message(errorAuthenticatedUser)
				mdnidService.getAuthenticatedUser(vm.mdnid, vm.phoneNumber).then(resolveAuthenticatedUser, errorAuthenticatedUser);
			}
		}
		//this is the function called when success is return from api call
		function resolveAuthenticatedUser(data){
			if(data == true){
				$state.go('otp');
			}
		}
		//this is the function called when error is return from api call
		function errorAuthenticatedUser(error){
			console.log(error);
		}

	}
})();

(function(){
	'use strict';
	angular.module('otp.module')
		.controller('otpCntl', otpCntl);

	otpCntl.$inject = ['otpService'];

	function otpCntl(otpService){
		var vm = this;
		vm.submitOtpForm = submitOtpForm;

		activate();

		///////////////////////////

		function activate(){

		}

		function submitOtpForm(isValid){
			if(isValid){
				//this API will call when user passed out of form validations
				//this API function(getAuthenticatedUser) is written inside the services
				//this will either return success(resolveAuthenticatedUser) or error message(errorAuthenticatedUser)
				otpService.getAuthenticatedUser(vm.otp).then(resolveAuthenticatedUser, errorAuthenticatedUser);
			}
		}
		//this is the function called when success is return from api call
		function resolveAuthenticatedUser(data){
			if(data == true){
				//$state.go('otp');
				//workflow on new user or existing user need to be added here
				//api need to return is the user is new or old
			}else{
				//wrong otp
				//otp authentication failed
			}
		}
		//this is the function called when error is return from api call
		function errorAuthenticatedUser(error){
			console.log(error);
		}
	}
})();

(function(){
	'use strict';
	angular.module('roorrmu.module')
		.controller('roorrmuCntl', roorrmuCntl);

	roorrmuCntl.$inject = ['roorrmuService'];

	function roorrmuCntl(roorrmuService){
		var vm = this;
		vm.submitRoOrRmuForm = submitRoOrRmuForm;

		activate();

		///////////////////////////

		function activate(){

		}

		function submitRoOrRmuForm(isValid){
			if(isValid){
				//this API will call when user passed out of form validations
				//this API function(getUserType) is written inside the services
				//this will either return success(resolveUserType) or error message(errorUserType)
				roorrmuService.postUserType(vm.userType).then(resolveUserType, errorUserType);
			}
		}
		//this is the function called when success is return from api call
		function resolveUserType(data){
			if(data == true){
				//$state.go('userbasicdetails');
			}
		}
		//this is the function called when error is return from api call
		function errorUserType(error){
			console.log(error);
		}
	}
})();

(function(){
	'use strict';
	angular.module('thankyou.module')
		.controller('thankyouCntl', thankyouCntl);

	thankyouCntl.$inject = ['thankyouService'];

	function thankyouCntl(thankyouService){
		var vm = this;

		vm.returnPartial = returnPartial;
		activate();

		///////////////////////////

		function activate(){

		}

		function returnPartial(view){
			return './shared/partial/_' + view + '.html';
		}

	}
})();

(function(){
	'use strict';
	angular.module('signedForm.module')
		.controller('signedFormCntl', signedFormCntl);

	signedFormCntl.$inject = ['signedFormService'];

	function signedFormCntl(signedFormService){
		var vm = this;

		vm.returnPartial = returnPartial;
		activate();

		///////////////////////////

		function activate(){

		}

		function returnPartial(view){
			return './shared/partial/_' + view + '.html';
		}
	}
})();

(function(){
	'use strict';
	angular.module('useraddressdetails.module')
		.controller('useraddressdetailsCntl', useraddressdetailsCntl);

	useraddressdetailsCntl.$inject = ['useraddressdetailsService'];

	function useraddressdetailsCntl(useraddressdetailsService){
		var vm = this;

		vm.returnPartial = returnPartial;
		vm.submitUserAddressDetails = submitUserAddressDetails;
		activate();

		///////////////////////////

		function activate(){

		}

		function returnPartial(view){
			return './shared/partial/_' + view + '.html';
		}

		function submitUserAddressDetails(isValid){
			if(isValid){
				//this API will call when user passed out of form validations
				//this API function(saveUserBasicDetails) is written inside the services
				//this will either return success(resolveUserDetails) or error message(errorUserDetails)
				useraddressdetailsService.saveUserAddressDetails(vm.userAddressDetails).then(resolveUserDetails, errorUserDetails);
			}
		}
		//this is the function called when success is return from api call
		function resolveUserDetails(data){
			if(data == true){
				//$state.go('userloandetails');
				//data is posted successfully
			}
		}
		//this is the function called when error is return from api call
		function errorUserDetails(error){
			console.log(error);
		}


	}
})();

(function(){
	'use strict';
	angular.module('userbasicdetails.module')
		.controller('userbasicdetailsCntl', userbasicdetailsCntl);

	userbasicdetailsCntl.$inject = ['userbasicdetailsService'];

	function userbasicdetailsCntl(userbasicdetailsService){
		var vm = this;

		vm.returnPartial = returnPartial;
		vm.submitUserBasicDetailsForm = submitUserBasicDetailsForm;
		vm.emailregex = new RegExp('.+@.+\\..+');
		vm.userBasicDetails = [];
		activate();

		///////////////////////////

		function activate(){

		}

		function returnPartial(view){
			return './shared/partial/_' + view + '.html';
		}

		function submitUserBasicDetailsForm(isValid){
			if(isValid){
				//this API will call when user passed out of form validations
				//this API function(saveUserBasicDetails) is written inside the services
				//this will either return success(resolveUserDetails) or error message(errorUserDetails)
				userbasicdetailsService.saveUserBasicDetails(vm.userBasicDetails).then(resolveUserDetails, errorUserDetails);
			}
		}
		//this is the function called when success is return from api call
		function resolveUserDetails(data){
			if(data == true){
				//$state.go('useraddressdetails');
				//data is posted successfully
			}
		}
		//this is the function called when error is return from api call
		function errorUserDetails(error){
			console.log(error);
		}

	}
})();

(function(){
	'use strict';
	angular.module('user.module')
		.controller('userCntl', userCntl);

	userCntl.$inject = ['userService'];

	function userCntl(userService){
		var vm = this;

		vm.returnPartial = returnPartial;
		activate();

		///////////////////////////

		function activate(){

		}

		function returnPartial(view){
			return './shared/partial/_' + view + '.html';
		}

	}
})();

(function(){
	'use strict';
	angular.module('userdownloadform.module')
		.controller('userdownloadformCntl', userdownloadformCntl);

	userdownloadformCntl.$inject = ['userdownloadformService'];

	function userdownloadformCntl(userdownloadformService){
		var vm = this;

		vm.returnPartial = returnPartial;
		activate();

		///////////////////////////

		function activate(){

		}

		function returnPartial(view){
			return './shared/partial/_' + view + '.html';
		}

	}
})();

(function(){
	'use strict';
	angular.module('userloandetails.module')
		.controller('userloandetailsCntl', userloandetailsCntl);

	userloandetailsCntl.$inject = ['userloandetailsService'];

	function userloandetailsCntl(userloandetailsService){
		var vm = this;

		vm.returnPartial = returnPartial;
		vm.submitUserLoanDetailsForm = submitUserLoanDetailsForm;
		activate();

		///////////////////////////

		function activate(){

		}

		function returnPartial(view){
			return './shared/partial/_' + view + '.html';
		}

		function submitUserLoanDetailsForm(isValid){
			if(isValid){
				//this API will call when user passed out of form validations
				//this API function(saveUserBasicDetails) is written inside the services
				//this will either return success(resolveUserDetails) or error message(errorUserDetails)
				userloandetailsService.saveUserLoanDetails(vm.userLoanDetails).then(resolveUserDetails, errorUserDetails);
			}
		}
		//this is the function called when success is return from api call
		function resolveUserDetails(data){
			if(data == true){
				//$state.go('useraddressdetails');
				//data is posted successfully
			}
		}
		//this is the function called when error is return from api call
		function errorUserDetails(error){
			console.log(error);
		}

	}
})();

(function(){
	'use strict';
	angular.module('core.module')
		.directive('popoverTrig', popoverTrig)

		popoverTrig.$inject = [];

		function popoverTrig(){
			var directive;

			directive = {
				restrict : 'A',
				scope : {},
				link : linkFunction
			}

			return directive;

			///////////////////////////////////////

			function linkFunction(scope, element, attrs){
				var _element = element,
            input = _element.closest('.input-group').find('input');

				_element.on('click', popoverHandler);

				function popoverHandler(event){
          input.popover('show');
				}

        input.on('keydown', hidePopover);

        function hidePopover(event){
          if(input.hasClass('validation-error')){
            input.popover('hide');
          }
        }
			}
		}
})();
